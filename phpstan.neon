includes:
    - config/services/services.neon
    - config/naming-rules.neon

parameters:
    level: 8

    paths:
        - src
        - config
        - tests

    excludePaths:
        # parallel
        - packages/*-phpstan-printer/tests/*ToPhpCompiler/Fixture*

        # tests
        - '*/tests/**/Source/*'
        - */stubs/*
        - */Fixture/*

    # https://github.com/TomasVotruba/unused-public
    unused_public:
        methods: true
        properties: true
        constants: true

    type_coverage:
        return: 99
        param: 99
        property: 99

    ignoreErrors:
        # needless generics
        - '#Class Symplify\\PHPStanRules\\(.*?)Rule implements generic interface PHPStan\\Rules\\Rule but does not specify its types\: TNodeType#'

        - '#Class PHP_CodeSniffer\\Sniffs\\Sniff not found#'

        - '#Method Symplify\\PHPStanRules\\Reflection\\ReflectionParser\:\:parseNativeClassReflection\(\) has parameter \$reflectionClass with generic class ReflectionClass but does not specify its types\: T#'

        - '#Method Symplify\\PHPStanRules\\NodeFinder\\TypeAwareNodeFinder\:\:findFirstInstanceOf\(\) should return \(TNode of PhpParser\\Node\)\|null but returns PhpParser\\Node\|null#'

        # overly detailed
        - '#Class Symplify\\PHPStanRules\\(.*?) extends generic class PHPStan\\Testing\\RuleTestCase but does not specify its types\: TRule#'
        - '#Method Symplify\\PHPStanRules\\(.*?)\:\:getRule\(\) return type with generic interface PHPStan\\Rules\\Rule does not specify its types\: TNodeType#'

        # part of public contract
        - '#Method Symplify\\PHPStanRules\\Tests\\Rules\\PHPUnit\\(.*?)\\(.*?)Test\:\:testRule\(\) has parameter \$expectedErrorMessagesWithLines with no value type specified in iterable type array#'

        # overly detailed
        - '#Class Symplify\\PHPStanRules\\Collector\\(.*?) implements generic interface PHPStan\\Collectors\\Collector but does not specify its types\: TNodeType, TValue#'

        # used in tests
        - '#Public constant "(.*?)\:\:ERROR_MESSAGE" is never used#'
