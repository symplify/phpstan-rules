includes:
    - config/services/services.neon
    - config/naming-rules.neon

parameters:
    treatPhpDocTypesAsCertain: false

    level: 8

    paths:
        - src
        - config
        - tests

    excludePaths:
        # parallel
        - packages/*-phpstan-printer/tests/*ToPhpCompiler/Fixture*

        # tests
        - '*/tests/**/Source/*'
        - */stubs/*
        - */Fixture/*

    # https://github.com/TomasVotruba/unused-public
    # unused_public:
    #     methods: true
    #     properties: true
    #     constants: true

    # type_coverage:
    #     return: 99
    #     param: 99
    #     property: 99

    ignoreErrors:
        # needless generics
        - '#Class Symplify\\PHPStanRules\\(.*?)Rule implements generic interface PHPStan\\Rules\\Rule but does not specify its types\: TNodeType#'

        - '#Class PHP_CodeSniffer\\Sniffs\\Sniff not found#'

        - '#Method Symplify\\PHPStanRules\\Reflection\\ReflectionParser\:\:parseNativeClassReflection\(\) has parameter \$reflectionClass with generic class ReflectionClass but does not specify its types\: T#'

        # overly detailed
        - '#Class Symplify\\PHPStanRules\\(.*?) extends generic class PHPStan\\Testing\\RuleTestCase but does not specify its types\: TRule#'
        - '#Method Symplify\\PHPStanRules\\(.*?)\:\:getRule\(\) return type with generic interface PHPStan\\Rules\\Rule does not specify its types\: TNodeType#'

        # part of public contract
        - '#Method Symplify\\PHPStanRules\\Tests\\Rules\\PHPUnit\\(.*?)\\(.*?)Test\:\:testRule\(\) has parameter \$expectedErrorMessagesWithLines with no value type specified in iterable type array#'

        # overly detailed
        - '#Class Symplify\\PHPStanRules\\Collector\\(.*?) implements generic interface PHPStan\\Collectors\\Collector but does not specify its types\: TNodeType, TValue#'

#        -
#            identifier: argument.type
#
        # useful to have IDE know the types
        - identifier: phpstanApi.instanceofType
#
#        -
#            identifier: return.type

        -
            identifier: class.notFound
            path: tests/Rules/Rector/PhpUpgradeImplementsMinPhpVersionInterfaceRule/PhpUpgradeImplementsMinPhpVersionInterfaceRuleTest.php

#        -
#            identifier: phpstanApi.runtimeReflection
#
#        -
#            identifier: phpstanApi.instanceofAssumption
#
#        -
#            identifier: method.childReturnType

        # overly detailed
        -
            message: '#Parameter \#2 \$expectedErrors of method PHPStan\\Testing\\RuleTestCase<(.*?)>::analyse\(\) expects list<array\{0: string, 1: int, 2\?: string\|null\}>, (.*?) given#'
            path: tests

        # fast effective check
        -
            message: '#Function is_a\(\) is a runtime reflection concept that might not work in PHPStan because it uses fully static reflection engine#'
            path: src/Rules/SeeAnnotationToTestRule.php
